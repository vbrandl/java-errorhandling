buildscript {
    repositories {
        jcenter()
		mavenCentral()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.17.0'
    id 'com.github.kt3k.coveralls' version '2.8.2'
    id 'info.solidsoft.pitest' version '1.2.4'
    id 'nebula.lint' version '8.3.1'
    id 'net.saliman.cobertura' version '2.5.2'
}

group = 'org.vbrandl'
archivesBaseName = "error-handling"
version = '1.0.0'

apply plugin: 'checkstyle'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'findbugs'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'pmd'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
	mavenCentral()
}

compileJava {
    options.warnings = true
    options.deprecation = true
    options.compilerArgs += ["-Xdoclint", "-Xlint"]
}

gradleLint {
	// warn on these lints
	rules = ['dependency-parentheses']
	// fail the build on these lints
	criticalRules = ['unused-dependency']
}

dependencies {
    testCompile 'junit:junit:[4.12,5.0)'
    testRuntime 'org.slf4j:slf4j-api:1.7.10' // needed for cobertura
}

jar {
    manifest {
        attributes 'Implementation-Version': version,
                   'Specification-Version': version
    }
}

task javadocJar(type: Jar, dependsOn: classes) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

tasks.withType(Pmd) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

checkstyle {
    configFile rootProject.file('config/checkstyle/checkstyle.xml')
    toolVersion = '7.8.2'
}

pmd {
    toolVersion = '5.7.0'
    ruleSetFiles = files('config/pmd/pmd-all-java.xml')
}

cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report

pitest {
    timestampedReports = false
    outputFormats = ['XML']
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = bintray_user
    key = bintray_apikey
    publications = ['mavenJava']
    dryRun = false
    publish = false
    pkg {
        repo = 'maven'
        name = 'error-handling'
        desc = 'Functional error-handling for Java'
        websiteUrl = 'https://github.com/vbrandl/java-errorhandling'
        issueTrackerUrl = 'https://github.com/vbrandl/java-errorhandling/issues'
        vcsUrl = 'https://github.com/vbrandl/java-errorhandling.git'
        licenses = ['Apache-2.0', 'MIT']
        publicDownloadNumbers = true
        version {
            name = project.version
        }
    }
}
